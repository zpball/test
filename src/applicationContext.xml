<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:flex="http://www.springframework.org/schema/flex"  
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-2.0.xsd 
	http://www.springframework.org/schema/flex  
    http://www.springframework.org/schema/flex/spring-flex-1.0.xsd 
	" >

	<bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="mappings">
            <value>
                /messagebroker/*=mySpringManagedMessageBroker
            </value>
        </property>
    </bean>

	<!-- Dispatches requests mapped to a MessageBroker -->
	<bean class="org.springframework.flex.messaging.servlet.MessageBrokerHandlerAdapter"/>

	<!-- Bootstraps and exposes the BlazeDS MessageBroker -->
	<bean id="mySpringManagedMessageBroker" class="org.springframework.flex.messaging.MessageBrokerFactoryBean" />	
	
    <!-- Implementation of ProductService using Spring's SimpleJdbcTemplate -->
    <bean id="productService" class="flex.samples.product.JdbcProductService" >
        <constructor-arg ref="dataSource"/>
    </bean>
    
    <!-- Expose the productService bean for BlazeDS remoting -->
    <bean id="product" class="org.springframework.flex.messaging.remoting.FlexRemotingServiceExporter">
        <property name="messageBroker" ref="mySpringManagedMessageBroker"/>
        <property name="service" ref="productService"/>
    </bean>
    


</beans>